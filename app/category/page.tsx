"use client";
import { useEffect, useState } from "react";
import Category from "../db/categories.json";
import Image from "next/image";
import Link from "next/link";
import { db } from "../db/database";
import { category } from "../db/schema/schema";
import { PgTable } from "drizzle-orm/pg-core";
// export const metadata: Metadata = {
//   title: "Category Page",
//   description: "Generated by create next app",
// };

type CategoryCardProps = {
  data: Category;
};
const CategoryCard: React.FC<CategoryCardProps> = ({ data }) => {
  return (
    <Link as={`/category/${data.categoryId}`} href={`/category/${data.categoryId}`}>
      <div className="w-full sm:w-[280px] duration-100 hover:scale-105 transition-all">
        <div className="w-[280px] h-[280px]">
          <Image
            width={280}
            height={280}
            src={data.image}
            priority
            className="w-full rounded-xl h-full object-cover"
            alt=""
          />
        </div>
        <div className="mt-3">
          <div className="text-xl font-semibold">{data.name}</div>
          <div className="truncate text-slate-500 ">{data.description}</div>
        </div>
      </div>
    </Link>
  );
};
interface Category extends PgTable {
  categoryId: string;
  name: string;
  description: string;
  image: string;
};

export default function Page() {
  // const [categories, setCategories] = useState<Category[]>([]);

  const getCategory = async () => {
    try {
      const data = await db.select().from(category);
      console.log(data)
      // setCategories();
    } catch (error) {
      console.error(error);
    }

    useEffect(() => {
      getCategory();
    }, []);

    return (
      <div className="flex justify-center">
        <div className="lg:w-[1320px] mt-6">
          <div className="flex mt-16 p-4 justify-center flex-col">
            <h1 className="text-5xl mb-9 font-bold">Category Page</h1>
            <div className="grid grid-cols-1 lg:grid-cols-3 xl:grid-cols-4 gap-6 sm:grid-cols-2">
              {category.map((category: Category) => (
                <CategoryCard key={category.categoryId} data={category} />
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  };
}
